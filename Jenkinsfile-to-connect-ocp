pipeline {
    agent any
    
    environment {
        OPENSHIFT_SERVER = 'https://api.ocp412.networknuts.lab:6443'
        OPENSHIFT_TOKEN = credentials('openshift-service-account-token')
        OPENSHIFT_NAMESPACE = 'devops-pipeline'
        GIT_REPO_URL = 'https://github.com/arytmw/jenkins-openshift-pipeline.git'
        DEPLOYMENT_YAML_PATH = 'deployment.yml'
    }
    
    stages {
        stage('Login to OpenShift') {
            steps {
                script {
                    // Log in to OpenShift cluster
                    sh "oc login --token=${OPENSHIFT_TOKEN} --server=${OPENSHIFT_SERVER} --insecure-skip-tls-verify"
                }
            }
        }
        
        stage('Clone Git Repository') {
            steps {
                script {
                    // Clone Git repository
                    git branch: 'main', url: GIT_REPO_URL
                }
            }
        }
        
        stage('Deploy to OpenShift') {
            steps {
                script {
                    // Apply deployment YAML
                    sh "oc apply -f ${DEPLOYMENT_YAML_PATH} -n ${OPENSHIFT_NAMESPACE}"
                }
            }
        }
    }
}

// https://youtu.be/xk8Fs200hLA?si=rxoVccN4kGPTqLXR

#here, jenkins will connect as a service account token, it wont connect to ocp via normal user
#it is not industry practice to connect to ocp via normal user from jenkins
#provifing admin privileges to service account
oc create sa jenkins-user
oc policy add-role-to-user admin -z jenkins-user -n devops-pipeline     -> provide admin privileges to service account/user 
oc describe sa jenkins-user   -> u will get token 



